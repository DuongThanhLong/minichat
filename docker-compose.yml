version: "3.7"
services:
  app:
    build:
      context: ./
      dockerfile: docker/Dockerfile
    image: minichatapp
    container_name: minichat-app
    restart: unless-stopped
    tty: true
    working_dir: /var/www/
    ports:
      - "3001:3000"
    volumes:
      - ./:/var/www
    networks:
      - minichat_network

  mongo:
    image: mongo
    restart: unless-stopped
    container_name: minichat-mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: minichat
      MONGO_INITDB_DATABASE: minichat
    networks:
      - minichat_network
    ports:
      - 27018:27017
    volumes:
      - mongodb:/data/db
      - ./docker/mongo:/data/configdb

  mongo-express:
    image: mongo-express
    restart: unless-stopped
    container_name: minichat-mongo-express
    env_file: ./.env
    ports:
      - 8082:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: minichat
      ME_CONFIG_MONGODB_URL: mongodb://root:minichat@mongo:27017/
      ME_CONFIG_MONGODB_AUTH_DATABASE: admin
      ME_CONFIG_BASICAUTH_USERNAME: $MONGO_EXPRESS_USER
      ME_CONFIG_BASICAUTH_PASSWORD: $MONGO_EXPRESS_PASSWORD
    networks:
      - minichat_network
    depends_on:
      - mongo

  redis:
    image: redis:alpine
    restart: unless-stopped
    container_name: minichat-redis
    command: redis-server --appendonly yes
    volumes:
      - ./docker/redis:/data
    ports:
      - 6381:6379
    networks:
      - minichat_network

networks:
  minichat_network:
    driver: bridge

volumes:
  mongodb:
    driver: local
